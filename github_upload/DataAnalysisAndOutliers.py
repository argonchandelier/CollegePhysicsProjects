# Logan Richan
# ph336

from numpy import std, mean, histogram
from matplotlib import pyplot as plt

### Problem 4 ###
print("Problem 4")

data = [5, 2, 3, 4, 3, 4, 4, 6, 10, 4, 3, 8, 4, 12, 8, 6, 6, 8, 4, 6, 
   7, 4, 9, 3, 5, 5, 9, 3, 8, 0, 7, 3, 10, 4, 6, 1, 2, 3, 2, 3, 3, 2, 
   5, 2, 6, 7, 4, 4, 4, 6, 10, 4, 5, 10, 2, 6, 4, 5, 4, 5, 5, 4, 4, 6,
    6, 11, 6, 4, 5, 1, 4, 5, 1, 6, 2, 5, 7, 3, 4, 9, 5, 2, 7, 3, 2, 
   10, 4, 1, 2, 3, 6, 2, 4, 5, 6, 5, 2, 6, 1, 9, 5, 3, 5, 4, 6, 7, 4, 
   7, 10, 1, 3, 2, 5, 7, 3, 5, 5, 5, 4, 2] # the given data set
   
s=std(data)
u=mean(data)

print(u)
print(s) # standard deviation 
print(s*1.65) # 90% confidence interval



### Problem 5 ###
print("Problem 5")
set2 = [[4.71,4.60,4.63,4.67,4.67,4.61,4.74,4.64,4.67,4.76,4.70,4.62,4.63,4.70,4.63,4.76,4.63,4.69,4.67,4.55],
        [4.58,4.65,4.71,4.54,4.66,4.65,4.65,4.75,4.76,4.62,4.67,4.66,4.61,4.69,4.76,4.70,4.67,4.64,4.64,4.52],
        [4.67,4.63,4.59,4.66,4.58,4.67,4.58,4.75,4.60,4.79,4.59,4.67,4.66,4.70,4.64,4.55,4.61,4.64,4.62,4.64],
        [4.60,4.74,4.70,4.67,4.63,4.58,4.64,4.69,4.68,4.53,4.65,4.57,4.71,4.62,4.67,4.66,4.51,4.52,4.50,4.69],
        [4.69,4.57,4.53,4.61,4.66,4.59,4.70,4.61,4.69,4.77,4.72,4.70,4.65,4.55,4.69,4.61,4.58,4.57,4.60,4.59],
        [4.60,4.59,4.67,4.76,4.55,4.66,4.68,4.56,4.70,4.56,4.59,4.71,4.63,4.76,4.58,4.68,4.60,4.78,4.67,4.51],
        [4.60,4.68,4.64,4.62,4.68,4.62,4.63,4.66,4.62,4.62,4.68,4.63,4.60,4.71,4.68,4.64,4.58,4.65,4.63,4.64],
        [4.62,4.70,4.67,4.61,4.68,4.70,4.65,4.73,4.67,4.54,4.73,4.67,4.69,4.67,4.54,4.64,4.61,4.65,4.59,4.70],
        [4.65,4.74,4.62,4.64,4.68,4.69,4.74,4.52,4.60,4.80,4.69,4.57,4.64,4.75,4.59,4.67,4.69,4.71,4.55,4.55],
        [4.74,4.60,4.71,4.61,4.60,4.72,4.63,4.56,4.56,4.64,4.54,4.70,4.54,4.68,4.63,4.63,4.64,4.60,4.65,4.52],
        [4.64,4.64,4.58,4.56,4.69,4.57,4.62,4.71,4.65,4.68,4.69,4.64,4.64,4.52,4.71,4.67,4.66,4.58,4.63,4.48],
        [4.62,4.64,4.65,4.66,4.72,4.66,4.70,4.65,4.63,4.60,4.66,4.64,4.60,4.73,4.54,4.76,4.66,4.64,4.57,4.64],
        [4.54,4.61,4.72,4.60,4.59,4.67,4.61,4.65,4.67,4.63,4.65,4.68,4.61,4.62,4.53,4.66,4.69,4.58,4.58,4.67],
        [4.54,4.66,4.62,4.66,4.65,4.58,4.68,4.53,4.57,4.63,4.73,4.69,4.59,4.66,4.68,4.69,4.56,4.60,4.70,4.57],
        [4.60,4.47,4.64,4.68,4.74,4.67,4.63,4.61,4.62,4.57,4.74,4.68,4.55,4.63,4.75,4.59,4.71,4.73,4.78,4.54],
        [4.75,4.64,4.51,4.69,4.74,4.74,4.65,4.68,4.63,4.66,4.64,4.62,4.55,4.63,4.72,4.71,4.69,4.66,4.71,4.74],
        [4.62,4.62,4.75,4.70,4.65,4.58,4.63,4.67,4.62,4.70,4.67,4.70,4.81,4.65,4.66,4.66,4.70,4.69,4.55,4.61],
        [4.54,4.69,4.61,4.68,4.65,4.67,4.60,4.65,4.59,4.69,4.63,4.64,4.57,4.60,4.65,4.60,4.68,4.56,4.59,4.63],
        [4.59,4.64,4.64,4.68,4.70,4.58,4.64,4.74,4.70,4.69,4.63,4.57,4.59,4.73,4.61,4.71,4.62,4.57,4.69,4.59],
        [4.62,4.74,4.66,4.60,4.64,4.67,4.69,4.60,4.71,4.57,4.50,4.60,4.57,4.69,4.68,4.69,4.67,4.69,4.63,4.68]]
        # 2nd given data set

# Initialize the means and stds
means = []
stds  = []

for i in range(20): # get each mean and standard deviation
    means.append(mean(set2[i]))
    stds.append(std(set2[i]))

print(means, stds)

# Make a histogram of the means
plt.hist(means, bins=3)
plt.show()
print("")


# Take the standard deviation of the means
stdM = std(means)
print(stdM)

# Use the formula for mean standard deviation and compare
stdMClaimed = mean(stds) / len(set2)**(0.5)
print(stdMClaimed)



### Problem 6 ###
print("Problem 6")

z = [5.68, 5.67, 5.46, 5.56, 5.66, 5.69, 5.64, 5.63, 5.65, 5.70,
     5.93, 5.61, 5.63, 5.73, 5.69, 5.64, 5.67, 5.63, 5.59, 5.61] # Given data

print("")

# Find the mean and standard deviation of the data
mz = mean(z)
sz = std(z)
print(mz, sz)

# The furthest data point is 5.93, which is over 3 standard deviations away
# Using the rejection formula (1-P/100)*N, this point should be rejected because we got 
# a value of 0.054, which is too small.
# The next farthest point at 5.46 was about 2.16 std away from the mean, and using the same
# formula we got 0.464, which is big enough not to be rejected.
# All other points will be closer to the mean so they will also not be rejected

 